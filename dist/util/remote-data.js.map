{"version":3,"file":"remote-data.js","sources":["../../src/util/remote-data.ts"],"sourcesContent":["import { tracked } from '@glimmer/tracking';\nimport { deprecate } from '@ember/debug';\nimport { waitForPromise } from '@ember/test-waiters';\n\nimport { resource, resourceFactory } from '../core/function-based';\n\nimport type { ResourceAPI } from '../core/function-based';\n\ntype FetchOptions = Parameters<typeof fetch>[1];\n\ndeprecate(\n  `importing from 'ember-resources/util/remote-data' is deprecated and will be removed in ember-resources@v7. ` +\n    `The exact same code and support is available at https://github.com/universal-ember/reactiveweb. ` +\n    `\\`pnpm add reactiveweb\\` and then \\` import { RemoteData } from 'reactiveweb/remote-data';\\`. ` +\n    `See also: https://github.com/NullVoxPopuli/ember-resources/issues/1061`,\n  false,\n  {\n    id: `ember-resources.util.remoteData`,\n    until: `7.0.0`,\n    for: `ember-resources`,\n    url: `https://reactive.nullvoxpopuli.com/functions/remote_data.remoteData-1.html`,\n    since: {\n      available: '6.4.4',\n      enabled: '6.4.4',\n    },\n  },\n);\n\n/**\n * @protected\n */\nexport class State<T = unknown> {\n  /**\n   * If an exception was thrown while making the request, the error\n   * thrown will be here.\n   */\n  @tracked error: Error | null = null;\n  /**\n   * The resolved value of the fetch request\n   */\n  @tracked value: T | null = null;\n\n  /**\n   * HTTP status code.\n   */\n  @tracked status: null | number = null;\n\n  /**\n   * True if the request has succeeded\n   */\n  @tracked isResolved = false;\n\n  /**\n   * True if the request has failed\n   */\n  @tracked isRejected = false;\n\n  /**\n   * true if the request has finished\n   */\n  get isFinished() {\n    return this.isResolved || this.isRejected;\n  }\n\n  /**\n   * Alias for `isFinished`\n   * which is in turn an alias for `isResolved || isRejected`\n   */\n  get isSettled() {\n    return this.isFinished;\n  }\n\n  /**\n   * Alias for isLoading\n   */\n  get isPending() {\n    return this.isLoading;\n  }\n\n  /**\n   * true if the fetch request is in progress\n   */\n  get isLoading() {\n    return !this.isFinished;\n  }\n\n  /**\n   * true if the request throws an exception\n   * or if the request.status is >= 400\n   */\n  get isError() {\n    let httpError = this.status && this.status >= 400;\n    let promiseThrew = this.isRejected;\n\n    return httpError || promiseThrew;\n  }\n}\n\n/**\n * <div class=\"callout note\">\n *\n * This is not a core part of ember-resources, but is an example utility to demonstrate a concept when authoring your own resources. However, this utility is still under the broader library's SemVer policy.\n *\n * A consuming app will not pay for the bytes of this utility unless imported.\n *\n * </div>\n *\n * Native [fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n * but with built-in [AbortController](https://developer.mozilla.org/en-US/docs/Web/API/AbortController)\n *\n * example with composition (maybe you want to implement your own version\n * that also wraps up authorization headers):\n * ```js\n * import { tracked } from '@glimmer/tracking';\n * import { use, resource } from 'ember-resources';\n * import { remoteData } from 'ember-resources/util/remote-data';\n *\n * class Demo {\n *   @tracked id = 1;\n *\n *   @use myData = resource((hooks) =>\n *     remoteData(hooks, `https://...${this.id}`)\n *   );\n * }\n * ```\n *\n * The same example, but without `@use`\n *\n * ```js\n * import { tracked } from '@glimmer/tracking';\n * import { resource } from 'ember-resources';\n * import { remoteData } from 'ember-resources/util/remote-data';\n *\n * class Demo {\n *   @tracked id = 1;\n *\n *   myData = resource(this, (hooks) =>\n *     remoteData(hooks, `https://...${this.id}`)\n *   );\n * }\n * ```\n *\n */\nexport function remoteData<T = unknown>(\n  { on }: ResourceAPI,\n  url: string,\n  options: FetchOptions = {},\n): State<T> {\n  let state = new State<T>();\n  let controller = new AbortController();\n\n  on.cleanup(() => controller.abort());\n\n  waitForPromise(\n    fetch(url, { signal: controller.signal, ...options })\n      .then((response) => {\n        state.status = response.status;\n\n        if (response.headers.get('Content-Type')?.includes('json')) {\n          return response.json();\n        }\n\n        return response.text();\n      })\n      .then((data) => {\n        state.isResolved = true;\n        state.value = data;\n      })\n      .catch((error) => {\n        state.isRejected = true;\n        state.error = error;\n      }),\n  );\n\n  return state;\n}\n\n/**\n * @note This is not a core part of ember-resources, but is an example utility to demonstrate a concept when authoring your own resources. However, this utility is still under the broader library's SemVer policy.\n * A consuming app will not pay for the bytes of this utility unless imported.\n *\n *\n *\n * json-based remote data utility.\n *\n * this API mimics the API of `fetch`, and will give you a reactive\n * [[State]] object, but won't be able to re-fetch when the url or options\n * change\n *\n * ```js\n * import { tracked } from '@glimmer/tracking';\n * import { use } from 'ember-resources';\n * import { RemoteData } from 'ember-resources/util/remote-data';\n *\n * class Demo {\n *   @use myData = RemoteData(`https://some.domain.io`);\n *\n *   @use withOptions = RemoteData(`https://some.domain.io`, {\n *     headers: {\n *       Authorization: 'Bearer <token>'\n *     }\n *   });\n * }\n * ```\n *\n * In strict mode with &lt;template&gt;\n * ```jsx gjs\n * import { RemoteData } from 'ember-resources/util/remote-data';\n *\n * const options = (token) => ({\n *   headers: {\n *     Authorization: `Bearer ${token}`\n *   }\n * });\n *\n * <template>\n *  {{#let (RemoteData \"https://some.domain\" (options \"my-token\")) as |state|}}\n *    {{state.isLoading}}\n *    {{state.value}}\n *  {{/let}}\n * </template>\n * ```\n *\n */\nexport function RemoteData<T = unknown>(url: string, options?: FetchOptions): State<T>;\n\n/**\n * json-based remote data utility\n *\n *\n * For a reactive URL (causing the underlying fetch to re-run when the URL changes),\n * the url must be the return value from a function passed to\n * `RemoteData`.\n *\n * ```js\n * import { tracked } from '@glimmer/tracking';\n * import { use } from 'ember-resources';\n * import { RemoteData } from 'ember-resources/util/remote-data';\n *\n * class Demo {\n *   @tracked url = 'https:// .... '\n *\n *   @use myData = RemoteData(() => this.url);\n * }\n * ```\n */\nexport function RemoteData<T = unknown>(url: () => string): State<T>;\n\n/**\n * json-based remote data utility\n *\n * When you want the remote data request to re-fetch\n * when either the URL or `FetchOptions` change, the `url`\n * becomes a property on the object returned from the thunk.\n *\n * ```js\n * import { tracked } from '@glimmer/tracking';\n * import { use } from 'ember-resources';\n * import { RemoteData } from 'ember-resources/util/remote-data';\n *\n * class Demo {\n *   @tracked id = 2;\n *   @tracked postData = '';\n *\n *   @use myData = RemoteData(() => ({\n *     url: `https://this.some.domain/${this.id}`,\n *     method: 'POST',\n *     body: this.postData\n *   }));\n * }\n * ```\n */\nexport function RemoteData<T = unknown>(options: () => { url: string } & FetchOptions): State<T>;\n\n/**\n * json-based remote data utility\n */\nexport function RemoteData<T = unknown>(\n  url: string | (() => string) | (() => { url: string } & FetchOptions),\n  opts?: FetchOptions,\n) {\n  return resource((hooks) => {\n    let result = typeof url === 'string' ? url : url();\n    let targetUrl: string;\n    let options: FetchOptions = {};\n\n    if (typeof result === 'string') {\n      targetUrl = result;\n    } else {\n      let { url, ...opts } = result;\n\n      targetUrl = url;\n      options = opts;\n    }\n\n    if (opts) {\n      options = { ...options, ...opts };\n    }\n\n    return remoteData<T>(hooks, targetUrl, options);\n  });\n}\n\nresourceFactory(RemoteData);\n"],"names":["deprecate","id","until","for","url","since","available","enabled","State","_class","constructor","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","isFinished","isResolved","isRejected","isSettled","isPending","isLoading","isError","httpError","status","promiseThrew","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","remoteData","on","options","state","controller","AbortController","cleanup","abort","waitForPromise","fetch","signal","then","response","headers","get","includes","json","text","data","value","catch","error","RemoteData","opts","resource","hooks","result","targetUrl","resourceFactory"],"mappings":"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"}