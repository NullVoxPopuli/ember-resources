{"version":3,"file":"fps.js","sources":["../../src/util/fps.ts"],"sourcesContent":["import { deprecate } from '@ember/debug';\n\nimport { cell, resource, resourceFactory } from '../index';\n\ndeprecate(\n  `importing from 'ember-resources/util/fps' is deprecated and will be removed in ember-resources@v7. ` +\n    `The exact same code and support is available at https://github.com/universal-ember/reactiveweb. ` +\n    `\\`pnpm add reactiveweb\\` and then \\` import { FrameRate, UpdateFrequency } from 'reactiveweb/fps';\\`. ` +\n    `See also: https://github.com/NullVoxPopuli/ember-resources/issues/1061`,\n  false,\n  {\n    id: `ember-resources.util.fps`,\n    until: `7.0.0`,\n    for: `ember-resources`,\n    url: `https://reactive.nullvoxpopuli.com/modules/fps.html`,\n    since: {\n      available: '6.4.4',\n      enabled: '6.4.4',\n    },\n  },\n);\n\n/**\n * <div class=\"callout note\">\n *\n * This is not a core part of ember-resources, but is an example utility to demonstrate a concept when authoring your own resources. However, this utility is still under the broader library's SemVer policy.\n *\n * A consuming app will not pay for the bytes of this utility unless imported.\n *\n * </div>\n *\n * Utility that uses requestAnimationFrame to report\n * how many frames per second the current monitor is\n * rendering at.\n *\n * The result is rounded to two decimal places.\n *\n * ```js\n * import { FrameRate } from 'ember-resources/util/fps';\n *\n * <template>\n *   {{FrameRate}}\n * </template>\n * ```\n */\nexport const FrameRate = resource(({ on }) => {\n  let value = cell(0);\n  let startTime = new Date().getTime();\n  let frame: number;\n\n  let update = () => {\n    // simulate receiving data as fast as possible\n    frame = requestAnimationFrame(() => {\n      value.current++;\n      update();\n    });\n  };\n\n  on.cleanup(() => cancelAnimationFrame(frame));\n\n  // Start the infinite requestAnimationFrame chain\n  update();\n\n  return () => {\n    let elapsed = (new Date().getTime() - startTime) * 0.001;\n    let fps = value.current * Math.pow(elapsed, -1);\n    let rounded = Math.round(fps * 100) * 0.01;\n    // account for https://stackoverflow.com/a/588014/356849\n    let formatted = `${rounded}`.substring(0, 5);\n\n    return formatted;\n  };\n});\n\n/**\n * <div class=\"callout note\">\n *\n * This is not a core part of ember-resources, but is an example utility to demonstrate a concept when authoring your own resources. However, this utility is still under the broader library's SemVer policy.\n *\n * A consuming app will not pay for the bytes of this utility unless imported.\n *\n * </div>\n *\n *\n *\n * Utility that will report the frequency of updates to tracked data.\n *\n * ```js\n * import { UpdateFrequency } from 'ember-resources/util/fps';\n *\n * export default class Demo extends Component {\n *   @tracked someProp;\n *\n *   @use updateFrequency = UpdateFrequency(() => this.someProp);\n *\n *   <template>\n *     {{this.updateFrequency}}\n *   </template>\n * }\n * ```\n *\n * NOTE: the function passed to UpdateFrequency may not set tracked data.\n */\nexport const UpdateFrequency = resourceFactory((ofWhat: () => unknown, updateInterval = 500) => {\n  updateInterval ||= 500;\n\n  let multiplier = 1000 / updateInterval;\n  let framesSinceUpdate = 0;\n\n  return resource(({ on }) => {\n    let value = cell(0);\n    let interval = setInterval(() => {\n      value.current = framesSinceUpdate * multiplier;\n      framesSinceUpdate = 0;\n    }, updateInterval);\n\n    on.cleanup(() => clearInterval(interval));\n\n    return () => {\n      ofWhat();\n      framesSinceUpdate++;\n\n      return value.current;\n    };\n  });\n});\n"],"names":["deprecate","id","until","for","url","since","available","enabled","FrameRate","resource","on","value","cell","startTime","Date","getTime","frame","update","requestAnimationFrame","current","cleanup","cancelAnimationFrame","elapsed","fps","Math","pow","rounded","round","formatted","substring","UpdateFrequency","resourceFactory","ofWhat","updateInterval","multiplier","framesSinceUpdate","interval","setInterval","clearInterval"],"mappings":"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"}