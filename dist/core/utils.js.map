{"version":3,"file":"utils.js","sources":["../../src/core/utils.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\nimport type { ArgsWrapper, Thunk } from './types';\n\nexport const DEFAULT_THUNK = () => [];\n\nexport function normalizeThunk(thunk?: Thunk): ArgsWrapper {\n  if (!thunk) {\n    return { named: {}, positional: [] };\n  }\n\n  let args = thunk();\n\n  if (Array.isArray(args)) {\n    return { named: {}, positional: args };\n  }\n\n  if (!args) {\n    return { named: {}, positional: [] };\n  }\n\n  /**\n   * Hopefully people aren't using args named \"named\"\n   */\n  if ('positional' in args || 'named' in args) {\n    return args;\n  }\n\n  return { named: args as Record<string, unknown>, positional: [] };\n}\n"],"names":["DEFAULT_THUNK","normalizeThunk","thunk","named","positional","args","Array","isArray"],"mappings":"AAAA;;AAGaA,MAAAA,aAAa,GAAGA,MAAM,GAAE;AAE9B,SAASC,cAAcA,CAACC,KAAa,EAAe;EACzD,IAAI,CAACA,KAAK,EAAE;IACV,OAAO;MAAEC,KAAK,EAAE,EAAE;AAAEC,MAAAA,UAAU,EAAE,EAAA;KAAI,CAAA;AACtC,GAAA;AAEA,EAAA,IAAIC,IAAI,GAAGH,KAAK,EAAE,CAAA;AAElB,EAAA,IAAII,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;IACvB,OAAO;MAAEF,KAAK,EAAE,EAAE;AAAEC,MAAAA,UAAU,EAAEC,IAAAA;KAAM,CAAA;AACxC,GAAA;EAEA,IAAI,CAACA,IAAI,EAAE;IACT,OAAO;MAAEF,KAAK,EAAE,EAAE;AAAEC,MAAAA,UAAU,EAAE,EAAA;KAAI,CAAA;AACtC,GAAA;;AAEA;AACF;AACA;AACE,EAAA,IAAI,YAAY,IAAIC,IAAI,IAAI,OAAO,IAAIA,IAAI,EAAE;AAC3C,IAAA,OAAOA,IAAI,CAAA;AACb,GAAA;EAEA,OAAO;AAAEF,IAAAA,KAAK,EAAEE,IAA+B;AAAED,IAAAA,UAAU,EAAE,EAAA;GAAI,CAAA;AACnE;;;;"}