{"version":3,"file":"use.js","sources":["../../src/core/use.ts"],"sourcesContent":["// NOTE: https://2ality.com/2022/10/javascript-decorators.html#class-getter-decorators%2C-class-setter-decorators\n// (for spec decorators, when it comes time to implement those)\n//\n// @ts-ignore\nimport { getValue } from '@glimmer/tracking/primitives/cache';\nimport { assert } from '@ember/debug';\nimport { associateDestroyableChild } from '@ember/destroyable';\n// @ts-ignore\nimport { invokeHelper } from '@ember/helper';\n\nimport { ReadonlyCell } from './cell';\nimport { INTERNAL } from './function-based/types';\nimport { normalizeThunk } from './utils';\n\nimport type { InternalFunctionResourceConfig, Reactive } from './function-based/types';\nimport type { ClassResourceConfig, Stage1DecoratorDescriptor } from '[core-types]';\n\ntype Config = ClassResourceConfig | InternalFunctionResourceConfig;\n\ntype NonInstanceType<K> = K extends InstanceType<any> ? object : K;\ntype DecoratorKey<K> = K extends string | symbol ? K : never;\ntype NonDecoratorKey<K> = K extends string | symbol ? never : ThisType<K>;\n\n/**\n * The `@use(...)` decorator can be used to use a Resource in javascript classes\n *\n * ```js\n * import { resource, use } from 'ember-resources';\n *\n * const Clock = resource( ... );\n *\n * class Demo {\n *   @use(Clock) time;\n * }\n * ```\n */\nexport function use<Value>(definition: Value | (() => Value)): PropertyDecorator;\n\n/**\n * The `@use` decorator can be used to use a Resource in javascript classes\n *\n * ```js\n * import { resource, use } from 'ember-resources';\n *\n * const Clock = resource(() => 2);\n *\n * class MyClass {\n *   @use data = Clock;\n * }\n *\n * (new MyClass()).data === 2\n * ```\n */\nexport function use<Prototype, Key>(\n  prototype: NonInstanceType<Prototype>,\n  key: DecoratorKey<Key>,\n  descriptor?: Stage1DecoratorDescriptor,\n): void;\n\n/**\n * The `use function can be used to use a Resource in javascript classes\n *\n * Note that when using this version of `use`, the value is only accessible on the `current`\n * property.\n *\n * ```js\n * import { resource, use } from 'ember-resources';\n *\n * const Clock = resource( ... );\n *\n * class Demo {\n *   data = use(this, Clock);\n * }\n *\n * (new Demo()).data.current === 2\n * ```\n */\nexport function use<Value>(\n  parent: object,\n  definition: Value | (() => Value),\n  _?: never,\n): Reactive<Value extends Reactive<any> ? Value['current'] : Value>;\n\nexport function use(\n  ...args:\n    | Parameters<typeof initializerDecorator>\n    | Parameters<typeof argumentToDecorator>\n    | Parameters<typeof classContextLink>\n) {\n  if (args.length === 3) {\n    return initializerDecorator(...args);\n  }\n\n  if (args.length === 2) {\n    if (typeof args[1] !== 'string' && typeof args[1] !== 'symbol') {\n      return classContextLink(args[0], args[1]);\n    }\n  }\n\n  if (args.length === 1) {\n    return argumentToDecorator(args[0]);\n  }\n\n  assert(`Unknown arity for \\`use\\`. Received ${args.length} arguments`, false);\n}\n\nfunction getCurrentValue<Value>(value: Value | Reactive<Value>): Value {\n  /**\n   * If we are working with a cell, forward the '.current' call to it.\n   */\n  if (typeof value === 'object' && value !== null && 'current' in value) {\n    return value.current;\n  }\n\n  return value;\n}\n\nfunction classContextLink<Value>(\n  context: object,\n  definition: Value | (() => Value),\n): Reactive<Value> {\n  let cache: ReturnType<typeof invokeHelper>;\n\n  return new ReadonlyCell<Value>(() => {\n    if (!cache) {\n      cache = invokeHelper(context, definition);\n\n      associateDestroyableChild(context, cache);\n    }\n\n    let value = getValue(cache);\n\n    return getCurrentValue(value);\n  });\n}\n\nfunction argumentToDecorator<Value>(definition: Value | (() => Value)): PropertyDecorator {\n  return (\n    _prototype: object,\n    key: string | symbol,\n    descriptor?: Stage1DecoratorDescriptor,\n  ): void => {\n    // TS's types for decorators use the Stage2 implementation, even though Babel uses Stage 1\n    if (!descriptor) return;\n\n    assert(`@use can only be used with string-keys`, typeof key === 'string');\n\n    assert(\n      `When @use(...) is passed a resource, an initialized value is not allowed. ` +\n        `\\`@use(Clock) time;`,\n      !descriptor.initializer,\n    );\n\n    let newDescriptor = descriptorGetter(definition);\n\n    return newDescriptor as unknown as void /* Thanks, TS and Stage 2 Decorators */;\n  };\n}\n\nfunction descriptorGetter(initializer: unknown | (() => unknown)) {\n  let caches = new WeakMap<object, any>();\n\n  return {\n    get(this: object) {\n      let cache = caches.get(this);\n\n      if (!cache) {\n        let config = (\n          typeof initializer === 'function' ? initializer.call(this) : initializer\n        ) as Config;\n\n        assert(\n          `Expected initialized value under @use to have used either the \\`resource\\` wrapper function, or a \\`Resource.from\\` call`,\n          INTERNAL in config,\n        );\n\n        if (config.type === 'function-based') {\n          cache = invokeHelper(this, config);\n          caches.set(this as object, cache);\n          associateDestroyableChild(this, cache);\n        } else if (config.type === 'class-based') {\n          let { definition, thunk } = config;\n\n          cache = invokeHelper(this, definition, () => normalizeThunk(thunk));\n          caches.set(this as object, cache);\n          associateDestroyableChild(this, cache);\n        }\n\n        assert(`Failed to create cache for internal resource configuration object`, cache);\n      }\n\n      let value = getValue(cache);\n\n      return getCurrentValue(value);\n    },\n  };\n}\n\nfunction initializerDecorator(\n  _prototype: object,\n  key: string | symbol,\n  descriptor?: Stage1DecoratorDescriptor,\n): void {\n  // TS's types for decorators use the Stage2 implementation, even though Babel uses Stage 1\n  if (!descriptor) return;\n\n  assert(`@use can only be used with string-keys`, typeof key === 'string');\n\n  let { initializer } = descriptor;\n\n  assert(\n    `@use may only be used on initialized properties. For example, ` +\n      `\\`@use foo = resource(() => { ... })\\` or ` +\n      `\\`@use foo = SomeResource.from(() => { ... });\\``,\n    initializer,\n  );\n\n  return descriptorGetter(initializer) as unknown as void /* Thanks, TS and Stage 2 Decorators */;\n}\n"],"names":["use","args","length","initializerDecorator","classContextLink","argumentToDecorator","assert","getCurrentValue","value","current","context","definition","cache","ReadonlyCell","invokeHelper","associateDestroyableChild","getValue","_prototype","key","descriptor","initializer","newDescriptor","descriptorGetter","caches","WeakMap","get","config","call","INTERNAL","type","set","thunk","normalizeThunk"],"mappings":"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"}