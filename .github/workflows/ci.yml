name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request: {}
  merge_group:
    types: [checks_requested]

concurrency:
   group: ci-${{ github.head_ref || github.ref }}
   cancel-in-progress: true

env:
  CI: true
  dist: ember-resources/dist

jobs:
  install_dependencies:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
        with:
          node-version: 18.18.1

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [install_dependencies]
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
        with:
          node-version: 18.18.1
      - name: Lint
        run: pnpm lint


  build:
    name: Build Tests
    needs: [install_dependencies]
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
        with:
          node-version: 18.18.1
      - uses: ./.github/actions/assert-build


  typecheck_legacy:
    name: '${{ matrix.typescript-scenario }}'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [build]
    continue-on-error: true
    strategy:
      fail-fast: true
      matrix:
        typescript-scenario:
          - typescript@4.8
          - typescript@4.9
          - typescript@5.0

    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
        with:
          node-version: 18.18.1
      - name: 'Build'
        run: pnpm build
      - name: 'Change TS to ${{ matrix.typescript-scenario }}'
        run: 'pnpm add --save-dev ${{ matrix.typescript-scenario}}'
        working-directory: ./test-app

      # This has been really annoying
      # due to injected dependencies :(
      - name: 'Re-sync injected dependencies'
        run: pnpm i -f
      - name: 'Print Versions'
        run: |
          pnpm --filter "test-app*" exec tsc -v;
          pnpm --filter "test-app*" exec glint --version;

      - name: 'Type checking (built in types)'
        run: pnpm --filter "test-app-old-ts" exec glint;

      # - name: 'Type checking (DefinitelyTyped types)'
      #   run: pnpm --filter "test-app-definitely-typed" exec glint;

  typecheck:
    name: '${{ matrix.typescript-scenario }}'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [build]
    continue-on-error: true
    strategy:
      fail-fast: true
      matrix:
        typescript-scenario:
          - typescript@5.1
          - typescript@5.2
          - typescript@5.3
          - typescript@5.4
          - typescript@5.5
          - typescript@5.6
          - typescript@5.7

    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
        with:
          node-version: 18.18.1
      - name: 'Build'
        run: pnpm build
      - name: 'Change TS to ${{ matrix.typescript-scenario }}'
        run: 'pnpm add --save-dev ${{ matrix.typescript-scenario}}'
        working-directory: ./test-app

      # This has been really annoying
      # due to injected dependencies :(
      - name: 'Re-sync injected dependencies'
        run: pnpm i -f
      - name: 'Print Versions'
        run: |
          pnpm --filter "test-app*" exec tsc -v;
          pnpm --filter "test-app*" exec glint --version;

      - name: 'Type checking (built in types)'
        run: pnpm --filter "test-app" exec glint;

      - name: 'Type checking (DefinitelyTyped types)'
        run: pnpm --filter "test-app-definitely-typed" exec glint;

  default_tests:
    name: Default Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
        with:
          node-version: 18.18.1
      - uses: ./.github/actions/download-built-package
      - run: pnpm --filter test-app test:ember

  codemod_tests:
    name: Codemod Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
      - run: pnpm vitest 
        working-directory: ./codemod

  floating_tests:
    name: Floating Deps Test
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
        with:
          node-version: 18.18.1
          args: '--no-lockfile' 
      - uses: ./.github/actions/download-built-package
      - run: pnpm i -f
      - run: pnpm --filter test-app test:ember


  try_scenarios:
    name: ${{ matrix.try-scenario }}
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [default_tests]

    strategy:
      fail-fast: false
      matrix:
        try-scenario:
          - ember-3.28
          - ember-4.0.0
          - ember-4.4
          - ember-4.8
          - ember-4.12
          - ember-5.4
          - ember-5.8
          - ember-5.12
          - ember-6.4
          - ember-release
          - embroider-safe
          - embroider-optimized

    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
        with:
          node-version: 18.18.1
      - uses: ./.github/actions/download-built-package
      - name: Run Tests
        working-directory: ./test-app
        run: >-
          node_modules/.bin/ember try:one ${{ matrix.try-scenario }}
          --skip-cleanup

  MeasureAssetSizes:
    name: Measure Asset Sizes
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: wyvox/action-setup-pnpm@v3
        with:
          node-version: 18.18.1
      - uses: ./.github/actions/download-built-package
      - name: measure asset sizes
        run: node ./dev/estimate-bytes/index.js
      - name: comment on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: asset-sizes
          path: ./dev/estimate-bytes/comment.txt

