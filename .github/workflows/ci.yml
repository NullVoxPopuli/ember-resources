name: CI
on:
  pull_request: null
  push:
    branches:
      - main
      - master
  schedule:
    - cron: 0 3 * * 0
env:
  CI: true
  dist: ember-resources/dist
jobs:
  build_test:
    name: Build Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 6.32.1
      - name: Install Dependencies
        run: pnpm install
      - name: Build and Assert Output
        run: pnpm --filter ember-resources-build-test test
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
  asset-sizes:
    name: Measure Asset Sizes
    timeout-minutes: 5
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master'
    needs:
      - build_test
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 6.32.1
      - name: Install Dependencies
        run: pnpm install
      - name: Download built package from cache
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
      - name: measure asset sizes
        run: node ./build/estimate-bytes/index.js
      - name: comment on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: ./build/estimate-bytes/comment.txt
  tests:
    name: Base Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs:
      - build_test
    strategy:
      matrix:
        node:
          - "12"
          - "14"
          - "16"
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 6.32.1
      - name: Install Dependencies
        run: pnpm install
      - name: Download built package from cache
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
      - name: Test with ${{ matrix.node }}
        run: pnpm --filter ember-app run ember:test
  try-scenarios:
    name: Ember Compatibility
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: tests
    strategy:
      fail-fast: true
      matrix:
        ember-try-scenario:
          - ember-3.25
          - ember-3.26
          - ember-3.28
          - ember-4.0.0
          - ember-concurrency-v1
          - ember-release
          - ember-beta
          - ember-canary
          - embroider-safe
          - embroider-optimized
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
        with:
          node-version: 12.x
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 6.32.1
      - name: Install Dependencies
        run: pnpm install
      - name: Download built package from cache
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
      - name: test
        working-directory: testing/ember-app
        run: >
          node_modules/.bin/ember try:one ${{ matrix.ember-try-scenario }}
          --skip-cleanup
  typescript-compatibility:
    name: Type checking - ${{ matrix.typescript-scenario }}
    timeout-minutes: 5
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: build_test
    strategy:
      fail-fast: true
      matrix:
        typescript-scenario:
          - typescript@4.2
          - typescript@4.3
          - typescript@4.4
          - typescript@4.5
          - typescript@4.6
          - typescript@next
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: volta-cli/action@v1
        with:
          node-version: 12.x
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 6.32.1
      - name: Install Dependencies
        run: pnpm install
      - name: Download built package from cache
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
      - name: Update TS Version
        run: pnpm add --save-dev ${{ matrix.typescript-scenario }}
        working-directory: testing/ember-app
      - name: Type checking
        run: pnpm --filter ember-app exec tsc --build
  publish:
    name: Release
    timeout-minutes: 5
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs:
      - tests
      - typescript-compatibility
      - try-scenarios
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 6.32.1
      - name: Install Dependencies
        run: pnpm install
      - name: Download built package from cache
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
      - name: Release
        run: ./node_modules/.bin/semantic-release
        working-directory: ./ember-resources
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
