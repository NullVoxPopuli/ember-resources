name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - master
  schedule:
    - cron: "0 3 * * 0" # every Sunday at 3am

env:
  CI: true

jobs:
  build_test:
    name: Build Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 6.32.1
      - run: pnpm install
      - run: pnpm --filter ember-resources-build-test test


  tests:
    name: Base Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: build_test
    strategy:
      matrix:
        node:
          - "12"
          - "14"
          - "16"
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 6.32.1
      - run: pnpm install
      - name: Test with ${{ matrix.node }}
        run: pnpm --filter ember-app run ember:test

  # floating-dependencies:
  #   if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
  #   name: Floating Dependencies
  #   timeout-minutes: 5
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node:
  #         - "12"
  #         - "14"

  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: volta-cli/action@v1
  #       with:
  #         node-version: ${{ matrix.node }}

  #     - run: yarn install --no-lockfile

  #     - name: Test with Node ${{ matrix.node }}
  #       run: yarn ember test

  try-scenarios:
    name: "Compatibility"
    timeout-minutes: 7
    runs-on: ubuntu-latest
    needs: tests

    strategy:
      fail-fast: true
      matrix:
        ember-try-scenario:
          - ember-3.25
          - ember-3.26
          - ember-3.28
          - ember-concurrency-v1
          - ember-release
          - ember-beta
          - ember-canary
          - embroider-safe
          - embroider-optimized
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
        with:
          node-version: 12.x
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 6.32.1

      - run: pnpm install
      - name: test
        working-directory: testing/ember-app
        run: |
          node_modules/.bin/ember try:one ${{ matrix.ember-try-scenario }} --skip-cleanup

  publish:
    name: Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: [tests, try-scenarios]

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 6.32.1
      - run: pnpm install
      - name: Release
        run: pnpm --filter ember-resources exec semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
